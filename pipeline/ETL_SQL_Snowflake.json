{
	"name": "ETL_SQL_Snowflake",
	"properties": {
		"activities": [
			{
				"name": "SQL_to_Snowflake",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "SnowflakeSink",
						"importSettings": {
							"type": "SnowflakeImportCopyCommand"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "AzureBlobStorage_VP_Leads",
							"type": "LinkedServiceReference"
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AzureMySql_CompanyLeads",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SnowflakeTable_CompanyLeads",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Email_on_Activity_Failure",
				"description": "Triggers the connected Logic App to send a notification email on pipeline failure",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SQL_to_Snowflake",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Receiver",
						"value": "sivasundarkarthikeyan@gmail.com"
					}
				],
				"typeProperties": {
					"url": "https://vp-email-sender.azurewebsites.net:443/api/SendEmailFromPipeline/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=v8hb7G5gmysaf1_zSlfB_I5keRcQ23bSXf4rJ5m0WvQ",
					"method": "POST",
					"body": {
						"message": "This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.",
						"dataFactoryName": "@{pipeline().DataFactory}",
						"pipelineName": "@{pipeline().Pipeline}",
						"receiver": "@{pipeline().parameters.receiver}"
					}
				}
			}
		],
		"annotations": []
	}
}